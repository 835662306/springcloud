spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://39.106.127.25:3306/guoxiaojing
    username: test
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource  #默认使用TomcatJDBD DataSource
  application:
    name: spring-cloud-eureka
  #文件上传
  http:
    multipart:
      enabled: true   # 启用http上传处理
      max-file-size: 100MB # 设置单个文件的最大长度
      max-request-size: 100MB # 设置最大的请求文件的大小
      file-size-threshold: 1MB  # 当上传文件达到1MB的时候进行磁盘写入
      location: /  # 上传的临时目录
  #视图模型解析,静态资源后缀配置
#  mvc:
#    view:
#      prefix: classpath:/templates/
#      suffix: .jsp
  #启动多个视图
#  thymeleaf:
#    mode: HTML5
#    encoding: utf-8
#    content-type: text/html
#    prefix: classpath:/templates/
#    suffix: .html
#    cache: false
#    template-resolver-order: 1
  freemarker:
    charset: UTF-8
    content-type: text/html
    suffix: .ftl
    template-loader-path: classpath:/templates/ftl/
    check-template-location: true
    cache: false
#RabbitMQ 配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
#kafka 配置
#  kafka:
#    bootstrap-servers:   #kafka集群地址
#    listener:
#      concurrency: 3  #指定listener 容器中的线程数，用于提高并发量
#    producer:
#      batch-size: 1000  #每次批量发送消息的数量
#    consumer:
#      group-id: myGroup  # 指定默认消费者group id
#    template:
#      default-topic: topic-1  # 指定默认topic id
#mongodb 配置
  data:
    mongodb:
      host: 127.0.0.1
      port: 27017
      database: mydb

server:
  port: 8000
eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://localhost:${server.port}/eureka/
#加载mybatis配置文件及映射文件
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml

#oauth2
#security:
#  oauth2:
#    client:
#      client-id: QeQmvLTfOdeHKPkwroxRO3uu
#      client-secret: NPmfxjHElsdtd20YdGqxjG0pGqG3Nsap
#      access-token-uri: http://openapi.baidu.com/oauth/2.0/token
#      user-authorization-uri: http://openapi.baidu.com/oauth/2.0/authorize
#    resource:
#      userInfoUri: https://openapi.baidu.com/rest/2.0/passport/users/getInfo


